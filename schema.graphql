type Player @entity {
    id: ID!
    initTimestamp: BigInt!
    homeWorld: Planet!
    planets: [Planet!]! @derivedFrom(field: "owner")
}

type Planet @entity {
    id: ID! # location hash of the planet
    owner: Player!
    isInitialized: Boolean!
    createdAt: BigInt!
    lastUpdated: BigInt!
    perlin: BigInt!
    range: BigInt!
    speed: BigInt!
    defense: BigInt!
    population: BigInt!
    populationCap: BigInt!
    populationGrowth: BigInt!
    silverCap: BigInt!
    silverGrowth: BigInt!
    silver: BigInt!
    planetLevel: BigInt!
    upgradeState0: BigInt!
    upgradeState1: BigInt!
    upgradeState2: BigInt!
    hatLevel: BigInt!
    planetResource: PlanetResource!
    spaceType: SpaceType!
    silverSpentComputed: Int!
}

type ArrivalsAtInterval @entity  {
    id: ID!
    arrivals: [Arrival!]!
}

type Meta @entity  {
    id: ID!
    lastProcessed: BigInt!
}

type Arrival @entity {
    id: ID!
    arrivalId: BigInt!
    player: Player!
    fromPlanet: BigInt!
    toPlanet: BigInt!
    popArriving: BigInt!
    silverMoved: BigInt!
    departureTime: BigInt!
    arrivalTime: BigInt!
    receivedAt: BigInt!
    processedAt: Int
}

enum PlanetResource {
    NONE
    SILVER
}

enum SpaceType {
    NEBULA
    SPACE
    DEEP_SPACE
}
